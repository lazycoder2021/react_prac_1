{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","id","name","email","CardList","cardComponent","robots","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","style","overflowY","border","height","children","App","onSearchChange","event","setState","searchfield","target","value","state","fetch","then","response","json","users","filteredRobots","this","filter","robot","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"6MAgBeA,EAdF,SAACC,GACV,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAI,QAAQC,IAAG,+BAA0BH,EAAMI,GAAhC,cACpB,gCACI,6BAAKJ,EAAMK,OACX,4BAAIL,EAAMM,eCYXC,EAjBE,SAACP,GACd,IAAMQ,EAAgBR,EAAMS,OAAOC,KAAI,SAACC,EAAKC,GACzC,OAAQ,cAAC,EAAD,CAEJR,GAAIJ,EAAMS,OAAOG,GAAGR,GACpBC,KAAML,EAAMS,OAAOG,GAAGP,KACtBC,MAAON,EAAMS,OAAOG,GAAGN,OAHlBM,MAOb,OACI,8BACKJ,KCAEK,EAbG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACjB,OACI,qBAAKb,UAAU,MAAf,SACI,uBACIA,UAAU,mCACVc,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCCXI,EARA,SAAClB,GACZ,OACI,qBAAKmB,MAAO,CAAEC,UAAW,SAAUC,OAAQ,kBAAoBC,OAAQ,SAAvE,SACKtB,EAAMuB,YC+CJC,E,kDA1CX,aAAe,IAAD,8BACV,gBAmBJC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SAnB1C,EAAKC,MAAQ,CACTtB,OAAQ,GACRmB,YAAa,IAJP,E,gEAUO,IAAD,OAChBI,MAAM,8CACDC,MAAK,SAAAC,GACF,OAAOA,EAASC,UAEnBF,MAAK,SAAAG,GACF,EAAKT,SAAS,CAAElB,OAAQ2B,S,+BAQ1B,IAAD,OACCC,EAAiBC,KAAKP,MAAMtB,OAAO8B,QAAO,SAAAC,GAC5C,OAAOA,EAAMnC,KAAKoC,cAAcC,SAAS,EAAKX,MAAMH,YAAYa,kBAGpE,OACI,sBAAKxC,UAAU,KAAf,UACI,6CACA,cAAC,EAAD,CAAWa,aAAcwB,KAAKb,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,CAAUhB,OAAQ4B,a,GAnCpBM,aCGHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.80c4213a.chunk.js","sourcesContent":["import React from 'react'; \r\n\r\nconst Card = (props) => {\r\n    return (\r\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img alt='photo' src={`https://robohash.org/${props.id}?200x200`} />\r\n            <div>\r\n                <h2>{props.name}</h2>\r\n                <p>{props.email}</p>\r\n            </div>\r\n        </div>\r\n    ); \r\n}\r\n\r\n\r\n\r\nexport default Card; \r\n\r\n\r\n// JavaScript source code\r\n","import React from 'react'; \r\nimport Card from './Card'; \r\n\r\nconst CardList = (props) => {\r\n    const cardComponent = props.robots.map((user,i) => {\r\n        return (<Card\r\n            key={i}\r\n            id={props.robots[i].id}\r\n            name={props.robots[i].name}\r\n            email={props.robots[i].email}\r\n        />); \r\n    }); \r\n\r\n    return (\r\n        <div>\r\n            {cardComponent}\r\n        </div> \r\n    ); \r\n}\r\n\r\nexport default CardList; \r\n\r\n\r\n\r\n\r\n\r\n\r\n// JavaScript source code\r\n","import React from 'react'; \r\n\r\nconst SearchBox = ({ searchChange }) => {\r\n    return (\r\n        <div className='pa2'>\r\n            <input\r\n                className='pa3 ba b--green bg-lightest-blue'\r\n                type='search'\r\n                placeholder='search robots'\r\n                onChange={searchChange}\r\n            />\r\n        </div>\r\n    ); \r\n}\r\n\r\nexport default SearchBox; \r\n\r\n\r\n\r\n\r\n// JavaScript source code\r\n","import React from 'react'; \r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{ overflowY: 'scroll', border: '5px solid black',  height: '800px' }}>\r\n            {props.children}\r\n        </div>\r\n        ); \r\n}; \r\n\r\nexport default Scroll; \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// JavaScript source code\r\n","import React, { Component } from 'react'; \r\nimport CardList from '../components/CardList'; \r\nimport SearchBox from '../components/SearchBox'; \r\nimport Scroll from '../components/Scroll'; \r\n\r\n\r\n\r\n\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: ''\r\n\r\n        }\r\n        \r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response => {\r\n                return response.json(); \r\n            })\r\n            .then(users => {\r\n                this.setState({ robots: users })\r\n            })  \r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({ searchfield: event.target.value })\r\n    }\r\n\r\n    render() {\r\n        const filteredRobots = this.state.robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase())\r\n        })\r\n        \r\n        return (\r\n            <div className='tc'>\r\n                <h1>ROBOFRIENDS</h1>\r\n                <SearchBox searchChange={this.onSearchChange} />\r\n                <Scroll>\r\n                    <CardList robots={filteredRobots} />\r\n                </Scroll>\r\n            </div>\r\n        );\r\n    }\r\n     \r\n}\r\n\r\nexport default App; \r\n\r\n\r\n\r\n\r\n// JavaScript source code\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App'; \nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons'; \n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}